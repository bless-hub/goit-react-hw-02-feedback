{"version":3,"sources":["components/Notification.js","components/Statistics.js","components/FeedbackOptions.js","components/Section.js","App.js","index.js"],"names":["Notification","message","Statistics","good","bad","neutral","total","positivePercentage","style","listStyle","fontSize","FeedbackOptions","options","onLeaveFeedback","map","option","margin","key","name","onClick","replace","Section","title","children","App","state","countTotalFeedback","countPositiveFeedbackPercentage","percent","Math","round","onIncrement","e","target","setState","prevState","this","Component","defaultProps","ReactDom","render","document","querySelector"],"mappings":"iMAGe,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,oCACE,4BAAKA,ICHI,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,oCACGD,EACC,wBAAIE,MAAO,CAAEC,UAAW,OAAQC,SAAU,SACxC,qCAAWP,GACX,wCAAcE,GACd,oCAAUD,GACV,sCAAYE,GACZ,iDAAuBC,EAAvB,OAGF,kBAACP,EAAD,CAAcC,QAAQ,iBCnBf,SAASU,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,oCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,4BACEP,MAAO,CAAEQ,OAAQ,GACjBC,IAAKF,EACLG,KAAMH,EACNI,QAASN,GAERE,EAAOK,QAAQL,EAAO,GAAIA,EAAO,SCV7B,SAASM,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,iCACE,4BAAKD,GACJC,I,ICFYC,E,4MAInBC,MAAQ,CAAEtB,KAAM,EAAGE,QAAS,EAAGD,IAAK,G,EAuBpCsB,mBAAqB,WAAO,IAAD,EACM,EAAKD,MACpC,OAFyB,EACjBtB,KADiB,EACXC,IADW,EACNC,S,EAIrBsB,gCAAkC,WAAO,IAGjCC,EAAkB,IAFP,EAAKH,MAAdtB,KACM,EAAKuB,qBAEnB,OAAOG,KAAKC,MAAMF,I,EAEpBG,YAAc,SAACC,GACb,IAAMf,EAAMe,EAAEC,OAAOf,KACrB,EAAKgB,UAAS,SAACC,GAAD,sBAAmBlB,EAAMkB,EAAUlB,GAAO,O,uDAIxD,OACE,oCACE,kBAACI,EAAD,CAASC,MAAM,yBACb,kBAACX,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBuB,KAAKL,eAG1B,kBAACV,EAAD,CAASC,MAAM,cACb,kBAACpB,EAAD,iBACMkC,KAAKX,MADX,CAEEnB,MAAO8B,KAAKV,qBACZnB,mBAAoB6B,KAAKT,2C,GAxDJU,aAAZb,EAEZc,aAAe,GCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.4d0185f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <h2>{message}</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Notification from \"./Notification\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  bad,\r\n  neutral,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <ul style={{ listStyle: \"none\", fontSize: \"20px\" }}>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedback:{positivePercentage} %</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"no feedback\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          style={{ margin: 5 }}\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option.replace(option[0], option[0])}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <section>\r\n        <h1>{title}</h1>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Section from \"./components/Section\";\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {};\r\n  static defaultProps = {};\r\n\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  // handleIncrGood = (e) => {\r\n  //   console.log(this);\r\n  //   console.log(\"good\");\r\n  //   this.setState({\r\n  //     good: this.state.good + 1,\r\n  //   });\r\n  // };\r\n\r\n  // handleInctNeutral = (e) => {\r\n  //   console.log(\"neutral\");\r\n  //   this.setState({\r\n  //     neutral: this.state.neutral + 1,\r\n  //   });\r\n  // };\r\n\r\n  // handleInctBad = (e) => {\r\n  //   console.log(\"bad\");\r\n  //   this.setState({\r\n  //     bad: this.state.bad + 1,\r\n  //   });\r\n  // };\r\n  countTotalFeedback = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    return good + bad + neutral;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const percent = (good * 100) / total;\r\n    return Math.round(percent);\r\n  };\r\n  onIncrement = (e) => {\r\n    const key = e.target.name;\r\n    this.setState((prevState) => ({ [key]: prevState[key] + 1 }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please Leave Feedback\">\r\n          <FeedbackOptions\r\n            options={[\"good\", \"neutral\", \"bad\"]}\r\n            onLeaveFeedback={this.onIncrement}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            {...this.state}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}